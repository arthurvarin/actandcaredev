{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\src\\\\Components\\\\Maintenance\\\\Maintenance.js\";\nimport React from 'react';\nimport '../Attraction/Attraction.css';\nimport MaintenanceCard from '../AttractionCard/MaintenanceCard.js';\nimport data from '../../maintenance.json';\nimport personnelData from '../../personnel.json';\nimport attractionData from '../../attraction.json';\nimport { SlideToggle } from 'react-slide-toggle';\nimport ReactNotify from 'react-notify';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar uuidv4 = require('uuid/v4');\n\nvar Maintenance =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Maintenance, _React$Component);\n\n  function Maintenance(props) {\n    var _this;\n\n    _classCallCheck(this, Maintenance);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Maintenance).call(this, props));\n\n    _this.submit = function (id, name, date, price) {\n      confirmAlert({\n        message: 'Etes-vous sûr de vouloir supprimer cette maintenance ?',\n        buttons: [{\n          label: 'Oui',\n          onClick: function onClick() {\n            return _this.deleteItem(id);\n          }\n        }, {\n          label: 'Non'\n        }]\n      });\n    };\n\n    _this.state = {\n      maintenance: data,\n      personnel: personnelData,\n      attraction: attractionData,\n      id: \"\",\n      attractionName: \"\",\n      techName: \" \",\n      date1: \" \",\n      date2: \" \",\n      modal: false,\n      modified: false\n    };\n    _this.handleDate1Change = _this.handleDate1Change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate2Change = _this.handleDate2Change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTechNameChange = _this.handleTechNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAttractionNameChange = _this.handleAttractionNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateItem = _this.updateItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Maintenance, [{\n    key: \"toggle\",\n    value: function toggle(id, name, date, price) {\n      this.setState({\n        modal: !this.state.modal\n      });\n      var maintenance;\n      maintenance = this.state.maintenance;\n\n      for (var i = 0; i < maintenance.length; ++i) {\n        if (maintenance[i].id == id) {\n          this.setState({\n            id: maintenance[i].id,\n            attractionName: maintenance[i].attractionName,\n            techName: maintenance[i].techName,\n            date1: maintenance[i].date1,\n            date2: maintenance[i].date2\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleDate1Change\",\n    value: function handleDate1Change(event) {\n      this.setState({\n        date1: event.target.value\n      });\n    }\n  }, {\n    key: \"handleDate2Change\",\n    value: function handleDate2Change(event) {\n      this.setState({\n        date2: event.target.value\n      });\n    }\n  }, {\n    key: \"handleTechNameChange\",\n    value: function handleTechNameChange(event) {\n      this.setState({\n        techName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleAttractionNameChange\",\n    value: function handleAttractionNameChange(event) {\n      this.setState({\n        attractionName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var maintenance = this.state.maintenance;\n      var newItem = {\n        \"attractionName\": this.state.attractionName,\n        \"techName\": this.state.techName,\n        \"date1\": this.state.date1,\n        \"date2\": this.state.date2\n      };\n      maintenance.push(newItem);\n      this.setState({\n        maintenance: maintenance\n      });\n      this.setState({\n        attractionName: \"\",\n        techName: \"\",\n        date1: \"\",\n        date2: \"\"\n      });\n      this.refs.notificator.success(\"Succès\", \"Maintenance ajoutée !\", 4000);\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(id) {\n      var maintenance;\n      maintenance = this.state.maintenance;\n\n      for (var i = 0; i < maintenance.length; ++i) {\n        if (maintenance[i].id == id) {\n          maintenance[i].deleted = true;\n          maintenance[i].modified = false;\n        }\n      }\n\n      this.setState({\n        maintenance: maintenance\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      if (this.state.modified) {\n        this.toggle();\n        this.updateItem();\n        this.setState({\n          modified: false\n        });\n      }\n    }\n  }, {\n    key: \"updateItem\",\n    value: function updateItem() {\n      this.setState({\n        modified: true\n      });\n      var maintenance;\n      maintenance = this.state.maintenance;\n\n      for (var i = 0; i < maintenance.length; ++i) {\n        if (maintenance[i].id == this.state.id) {\n          maintenance[i].attractionName = this.state.attractionName;\n          maintenance[i].techName = this.state.techName;\n          maintenance[i].date1 = this.state.date1;\n          maintenance[i].date2 = this.state.date2;\n        }\n      }\n\n      this.setState({\n        maintenance: maintenance\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var maintenance;\n      maintenance = this.state.maintenance.map(function (attraction) {\n        if (!attraction.deleted) {\n          return React.createElement(\"div\", {\n            class: \"col col-lg-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(MaintenanceCard, {\n            updateItem: _this3.toggle,\n            deleteItem: _this3.submit,\n            class: \"card\",\n            id: attraction.id,\n            attractionName: attraction.attractionName,\n            techName: attraction.techName,\n            date1: attraction.date1,\n            date2: attraction.date2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }));\n        }\n      });\n      var personnel;\n      personnel = this.state.personnel.map(function (personnel) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, personnel.fname, \" \", personnel.name);\n      });\n      var attraction;\n      attraction = this.state.attraction.map(function (attraction) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, attraction.name);\n      });\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(SlideToggle, {\n        collapsed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, function (_ref) {\n        var onToggle = _ref.onToggle,\n            setCollapsibleElement = _ref.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"my-collapsible\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"row justify-content-md-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-block\",\n          id: \"addElement\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \" Ajouter une attraction \")), React.createElement(\"div\", {\n          className: \"my-collapsible__content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"my-collapsible__content-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: _this3.handleSubmit.bind(_this3),\n          class: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"nomdelattraction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Attraction\"), React.createElement(\"select\", {\n          class: \"form-control\",\n          name: \"Attraction\",\n          value: _this3.state.attractionName,\n          onChange: _this3.handleAttractionNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, attraction), \"        \"), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"nomdelattraction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Technicien\"), React.createElement(\"select\", {\n          class: \"form-control\",\n          name: \"Technicien\",\n          value: _this3.state.techName,\n          onChange: _this3.handleDate1Change,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, personnel))), React.createElement(\"div\", {\n          class: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"nomdelattraction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Derni\\xE8re maintenance\"), React.createElement(\"input\", {\n          type: \"date\",\n          class: \"form-control\",\n          value: _this3.state.date1,\n          onChange: _this3.handleDate1Change,\n          placeholder: \"24\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"nomdelattraction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Prochaine maintenance\"), React.createElement(\"input\", {\n          type: \"date\",\n          class: \"form-control\",\n          value: _this3.state.date2,\n          onChange: _this3.handleDate2Change,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }))), React.createElement(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-md btn-block\",\n          id: \"addNewElement\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \" Ajouter \")))));\n      })), React.createElement(\"div\", {\n        class: \"row  justify-content-around\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Modifier une attraction\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nomdelattraction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Attraction\"), React.createElement(\"select\", {\n        class: \"form-control\",\n        name: \"Attraction\",\n        value: this.state.attractionName,\n        onChange: this.handleAttractionNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, attraction), \"        \"), React.createElement(\"div\", {\n        class: \"form-group col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nomdelattraction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Technicien\"), React.createElement(\"select\", {\n        class: \"form-control\",\n        name: \"Technicien\",\n        value: this.state.techName,\n        onChange: this.handleDate1Change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, personnel))), React.createElement(\"div\", {\n        class: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nomdelattraction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Derni\\xE8re maintenance\"), React.createElement(\"input\", {\n        type: \"date\",\n        class: \"form-control\",\n        value: this.state.date1,\n        onChange: this.handleDate1Change,\n        placeholder: \"24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nomdelattraction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Prochaine maintenance\"), React.createElement(\"input\", {\n        type: \"date\",\n        class: \"form-control\",\n        value: this.state.date2,\n        onChange: this.handleDate2Change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        onClick: this.updateItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Modifier\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Annuler\"))), maintenance), React.createElement(ReactNotify, {\n        ref: \"notificator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Maintenance;\n}(React.Component);\n\nexport { Maintenance as default };","map":{"version":3,"sources":["C:\\Users\\Arthur\\Documents\\GitHub\\actandcaredev\\src\\Components\\Maintenance\\Maintenance.js"],"names":["React","MaintenanceCard","data","personnelData","attractionData","SlideToggle","ReactNotify","confirmAlert","Button","Modal","ModalHeader","ModalBody","ModalFooter","uuidv4","require","Maintenance","props","submit","id","name","date","price","message","buttons","label","onClick","deleteItem","state","maintenance","personnel","attraction","attractionName","techName","date1","date2","modal","modified","handleDate1Change","bind","handleDate2Change","handleTechNameChange","handleAttractionNameChange","updateItem","toggle","setState","i","length","event","target","value","e","preventDefault","newItem","push","refs","notificator","success","deleted","timerID","setInterval","tick","clearInterval","map","fname","onToggle","setCollapsibleElement","handleSubmit","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../Attraction/Attraction.css'\r\nimport MaintenanceCard from '../AttractionCard/MaintenanceCard.js'\r\nimport data from '../../maintenance.json'\r\nimport personnelData from '../../personnel.json'\r\nimport attractionData from '../../attraction.json'\r\nimport { SlideToggle } from 'react-slide-toggle';\r\nimport ReactNotify from 'react-notify';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n\r\nexport default class Maintenance extends React.Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          maintenance: data,\r\n          personnel: personnelData,\r\n          attraction: attractionData,\r\n          id:\"\",\r\n          attractionName:\"\",\r\n          techName:\" \",\r\n          date1:\" \",\r\n          date2:\" \",\r\n          modal: false,\r\n          modified:false,\r\n        };\r\n        this.handleDate1Change = this.handleDate1Change.bind(this);\r\n        this.handleDate2Change = this.handleDate2Change.bind(this);\r\n        this.handleTechNameChange = this.handleTechNameChange.bind(this);\r\n        this.handleAttractionNameChange = this.handleAttractionNameChange.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.updateItem = this.updateItem.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n      }\r\n      toggle(id,name,date,price) {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        });\r\n        let maintenance;\r\n        maintenance = this.state.maintenance\r\n\r\n        for(let i = 0; i< maintenance.length; ++i)\r\n          if(maintenance[i].id == id){\r\n            this.setState({\r\n              id:maintenance[i].id,\r\n              attractionName:maintenance[i].attractionName,\r\n              techName:maintenance[i].techName,\r\n              date1:maintenance[i].date1,\r\n              date2:maintenance[i].date2\r\n            })\r\n          }\r\n\r\n      }\r\n\r\n        handleDate1Change(event) {\r\n          this.setState({date1: event.target.value});\r\n        }\r\n\r\n        handleDate2Change(event) {\r\n          this.setState({date2: event.target.value});\r\n        }\r\n        handleTechNameChange(event) {\r\n          this.setState({techName: event.target.value});\r\n        }\r\n        handleAttractionNameChange(event) {\r\n          this.setState({attractionName: event.target.value});\r\n        }\r\n\r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        let maintenance = this.state.maintenance;\r\n        let newItem = {\r\n          \"attractionName\":this.state.attractionName,\r\n          \"techName\":this.state.techName,\r\n          \"date1\":this.state.date1,\r\n          \"date2\":this.state.date2};\r\n          maintenance.push(newItem)\r\n          this.setState({maintenance: maintenance});\r\n        this.setState({attractionName:\"\",techName:\"\",date1:\"\",date2:\"\"});\r\n      this.refs.notificator.success(\"Succès\", \"Maintenance ajoutée !\", 4000);\r\n    }\r\n    deleteItem(id){\r\n      let maintenance;\r\n      maintenance = this.state.maintenance\r\n      for(let i = 0; i< maintenance.length; ++i)\r\n        if(maintenance[i].id == id){\r\n          maintenance[i].deleted = true;\r\n          maintenance[i].modified = false;\r\n        }\r\n\r\n      this.setState({maintenance: maintenance});\r\n    }\r\n\r\n    componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    if(this.state.modified){\r\n          this.toggle();\r\n          this.updateItem();\r\n          this.setState({modified:false})\r\n    }\r\n\r\n  }\r\n\r\n    updateItem(){\r\n      this.setState({modified:true})\r\n      let maintenance;\r\n      maintenance = this.state.maintenance\r\n\r\n      for(let i = 0; i< maintenance.length; ++i)\r\n        if(maintenance[i].id == this.state.id){\r\n          maintenance[i].attractionName = this.state.attractionName;\r\n          maintenance[i].techName = this.state.techName;\r\n          maintenance[i].date1 = this.state.date1;\r\n          maintenance[i].date2 = this.state.date2;\r\n\r\n\r\n        }\r\n      this.setState({maintenance: maintenance});\r\n\r\n\r\n    }\r\n\r\n    submit = (id,name,date,price) => {\r\n   confirmAlert({\r\n     message: 'Etes-vous sûr de vouloir supprimer cette maintenance ?',\r\n     buttons: [\r\n       {\r\n         label: 'Oui',\r\n         onClick: () => this.deleteItem(id)\r\n       },\r\n       {\r\n         label: 'Non',\r\n\r\n       }\r\n     ]\r\n   })\r\n };\r\n\r\n\r\n  render() {\r\n    let maintenance;\r\n    maintenance = this.state.maintenance.map(attraction => {\r\n\r\n    if(!attraction.deleted){\r\n        return(\r\n          <div class=\"col col-lg-5\">\r\n            <MaintenanceCard updateItem={this.toggle} deleteItem={this.submit} class=\"card\" id={attraction.id} attractionName={attraction.attractionName} techName={attraction.techName} date1={attraction.date1} date2={attraction.date2} />\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n    let personnel;\r\n    personnel = this.state.personnel.map(personnel => {\r\n        return(\r\n          <option>{personnel.fname} {personnel.name}</option>\r\n        )\r\n\r\n    })\r\n    let attraction;\r\n    attraction = this.state.attraction.map(attraction => {\r\n        return(\r\n          <option >{attraction.name}</option>\r\n        )\r\n\r\n    })\r\n\r\n\r\n\r\n    return (\r\n    <div class=\"container\">\r\n        <div>\r\n        <SlideToggle collapsed >\r\n          {({onToggle, setCollapsibleElement}) => (\r\n            <div className=\"my-collapsible\">\r\n            <div class=\"row justify-content-md-center\">\r\n              <button type=\"button\" class=\"btn btn-lg btn-block\" id=\"addElement\" onClick={onToggle}> Ajouter une attraction </button>\r\n            </div>\r\n      <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n        <div className=\"my-collapsible__content-inner\">\r\n        <form onSubmit={this.handleSubmit.bind(this)} class=\"form\">\r\n        <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n        <label for=\"nomdelattraction\">Attraction</label>\r\n        <select class=\"form-control\" name=\"Attraction\" value={this.state.attractionName} onChange={this.handleAttractionNameChange}>\r\n        {attraction}\r\n        </select>        </div>\r\n        <div class=\"form-group col-md-6\">\r\n        <label for=\"nomdelattraction\">Technicien</label>\r\n        <select class=\"form-control\" name=\"Technicien\" value={this.state.techName} onChange={this.handleDate1Change}>\r\n        {personnel}\r\n      </select>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n        <label for=\"nomdelattraction\">Dernière maintenance</label>\r\n        <input type=\"date\" class=\"form-control\" value={this.state.date1} onChange={this.handleDate1Change} placeholder=\"24\" />\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n        <label for=\"nomdelattraction\">Prochaine maintenance</label>\r\n        <input type=\"date\" class=\"form-control\" value={this.state.date2} onChange={this.handleDate2Change}  />\r\n        </div>\r\n\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-md btn-block\" id=\"addNewElement\" onClick={onToggle}> Ajouter </button>\r\n        </form>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n</SlideToggle>\r\n            </div>\r\n            <div class=\"row  justify-content-around\">\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Modifier une attraction</ModalHeader>\r\n          <ModalBody>\r\n          <form onSubmit={this.handleSubmit.bind(this)} >\r\n          <div class=\"form-row\">\r\n          <div class=\"form-group col-md-6\">\r\n          <label for=\"nomdelattraction\">Attraction</label>\r\n          <select class=\"form-control\" name=\"Attraction\" value={this.state.attractionName} onChange={this.handleAttractionNameChange}>\r\n          {attraction}\r\n          </select>        </div>\r\n          <div class=\"form-group col-md-6\">\r\n          <label for=\"nomdelattraction\">Technicien</label>\r\n          <select class=\"form-control\" name=\"Technicien\" value={this.state.techName} onChange={this.handleDate1Change}>\r\n          {personnel}\r\n        </select>\r\n          </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n          <div class=\"form-group col-md-6\">\r\n          <label for=\"nomdelattraction\">Dernière maintenance</label>\r\n          <input type=\"date\" class=\"form-control\" value={this.state.date1} onChange={this.handleDate1Change} placeholder=\"24\" />\r\n          </div>\r\n          <div class=\"form-group col-md-6\">\r\n          <label for=\"nomdelattraction\">Prochaine maintenance</label>\r\n          <input type=\"date\" class=\"form-control\" value={this.state.date2} onChange={this.handleDate2Change}  />\r\n          </div>\r\n\r\n          </div>\r\n          </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"primary\" onClick={this.updateItem}>Modifier</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.toggle}>Annuler</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n                {maintenance}\r\n            </div>\r\n            <ReactNotify ref='notificator'/>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}