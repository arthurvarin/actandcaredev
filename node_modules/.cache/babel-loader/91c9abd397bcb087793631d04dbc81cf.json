{"ast":null,"code":"import _classCallCheck from \"/Users/cvoisin/Repos/ActCareDev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cvoisin/Repos/ActCareDev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cvoisin/Repos/ActCareDev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cvoisin/Repos/ActCareDev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cvoisin/Repos/ActCareDev/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/cvoisin/Repos/ActCareDev/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/cvoisin/Repos/ActCareDev/src/Components/RechercheMissions/RechercheMissions.js\";\nimport React from 'react';\nimport './AjoutMissions.css';\nimport listetypedetablissement from '../../Jasons/listetypedetablissement.json';\nimport listespecialite from '../../Jasons/listespecialite.json';\nimport listetype from '../../Jasons/listetype.json';\nimport * as firebase from 'firebase';\n\nvar AjoutMissions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AjoutMissions, _React$Component);\n\n  function AjoutMissions(props) {\n    var _this;\n\n    _classCallCheck(this, AjoutMissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AjoutMissions).call(this, props));\n    _this.state = {\n      listMissions: []\n    };\n    _this.getMissions = _this.getMissions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AjoutMissions, [{\n    key: \"getMissions\",\n    value: function getMissions() {\n      var i = 0;\n      var nomission1 = \"\";\n      var statut1 = \"\";\n      var ref = firebase.database().ref('missions');\n      ref.once('value').then(function (snapshot) {\n        var mission = snapshot.val();\n        nomission1 = mission.nomission;\n        statut1 = mission.statut;\n        this.setState({\n          listMissions: this.state.listMissions.concat({\n            mission: nomission1,\n            statut: statut1\n          })\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"getMissionCount\",\n    value: function getMissionCount(tmpserialnumber) {\n      var missioncount = 0;\n      var missionRef = firebase.database().ref('missions');\n      missionRef.on('child_added', function (snap) {\n        var mission = snap.val();\n        var serialnumber = \"\" + mission.datededebut.slice(0, 4) + mission.datededebut.slice(5, 7);\n\n        if (serialnumber.valueOf() === tmpserialnumber.valueOf() && mission.nomission.length < 12) {\n          missioncount++;\n        }\n\n        if (serialnumber.valueOf() === tmpserialnumber.valueOf() && mission.nomission.length > 12) {\n          if (mission.nomission.charAt(12) === '1') {\n            missioncount++;\n          }\n        }\n      });\n      return missioncount;\n    }\n  }, {\n    key: \"getSerialNumber\",\n    value: function getSerialNumber(tmpserialnumber) {\n      var missioncount = this.getMissionCount(tmpserialnumber);\n      missioncount = missioncount + 1;\n      var serialnumber = \"\";\n      if (missioncount < 10) serialnumber = \"000\" + missioncount;\n      if (missioncount < 100 && missioncount >= 10) serialnumber = \"00\" + missioncount;\n      if (missioncount < 1000 && missioncount >= 100) serialnumber = \"0\" + missioncount;\n      if (missioncount < 10000 && missioncount >= 1000) serialnumber = \"\" + missioncount;\n      return serialnumber;\n    }\n  }, {\n    key: \"ajouterMission\",\n    value: function ajouterMission(datededebut, tmpserialnumber, endserialnumber, extra) {\n      this.setState({\n        nomission: \"M\" + tmpserialnumber + endserialnumber + extra\n      }); //this.state.nomission =  \"M\" + tmpserialnumber + endserialnumber + extra ;\n      // const missionsetRef = firebase.database().ref('missions/' + this.state.nomission).set(\n      // {\n      //   nomission: this.state.nomission,\n      //   ville: this.state.ville,\n      //   typedetablissement: this.state.typedetablissement,\n      //   region: this.state.region,\n      //   specialite: this.state.specialite,\n      //   type: this.state.type,\n      //   datededebut: datededebut,\n      //   datedefin: this.state.datedefin,\n      //   heurededebut: this.state.heurededebut,\n      //   heuredefin: this.state.heuredefin,\n      //   remuneration: this.state.remuneration,\n      //   commentaires: this.state.commentaires,\n      //   statut: \"Recherche en cours\"\n      // });\n\n      this.setState({\n        ville: \"\",\n        typedetablissement: \"\",\n        region: \"\",\n        specialite: \"\",\n        type: \"\",\n        datededebut: \"\",\n        datedefin: \"\",\n        heurededebut: \"\",\n        heuredefin: \"\",\n        remuneration: \"\",\n        commentaires: \"\"\n      });\n    }\n  }, {\n    key: \"getDates\",\n    value: function getDates(date1, date2) {\n      var returnarray = new [](); //let returnarray= new Array();\n\n      var currentDate = date1;\n\n      while (currentDate.valueOf() <= date2.valueOf()) {\n        returnarray.push(new Date(currentDate));\n        currentDate = new Date(currentDate.getTime() + 24 * 60 * 60 * 1000);\n      }\n\n      return returnarray;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n\n      if (this.state.datededebut.length > 0 && this.state.datedefin.length === 0) {\n        var tmpserialnumber = \"\" + this.state.datededebut.slice(0, 4) + this.state.datededebut.slice(5, 7);\n        var endserialnumber = this.getSerialNumber(tmpserialnumber);\n        this.ajouterMission(this.state.datededebut, tmpserialnumber, endserialnumber, \"\");\n      }\n\n      if (this.state.datededebut.length > 0 && this.state.datedefin.length > 0) {\n        var datededebut = new Date(this.state.datededebut.slice(0, 4), this.state.datededebut.slice(5, 7) - 1, this.state.datededebut.slice(8, 10));\n        var datedefin = new Date(this.state.datedefin.slice(0, 4), this.state.datedefin.slice(5, 7) - 1, this.state.datedefin.slice(8, 10));\n        var tabdates = [];\n        tabdates = this.getDates(datededebut, datedefin);\n\n        var _tmpserialnumber = \"\" + this.state.datededebut.slice(0, 4) + this.state.datededebut.slice(5, 7);\n\n        var _endserialnumber = this.getSerialNumber(_tmpserialnumber);\n\n        for (var i = 0; i < tabdates.length; i++) {\n          var stringdate = \"\" + tabdates[i].getFullYear() + \"-\" + (tabdates[i].getMonth() + 1) + \"-\" + tabdates[i].getDate();\n          this.ajouterMission(stringdate, _tmpserialnumber, _endserialnumber, \"-\" + (i + 1));\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var missionRef = firebase.database().ref('missions');\n      missionRef.on('value', function (snap) {\n        _this2.setState({\n          missioncount: snap.val()\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.getMissions());\n    }\n  }]);\n\n  return AjoutMissions;\n}(React.Component);\n\nexport { AjoutMissions as default };","map":{"version":3,"sources":["/Users/cvoisin/Repos/ActCareDev/src/Components/RechercheMissions/RechercheMissions.js"],"names":["React","listetypedetablissement","listespecialite","listetype","firebase","AjoutMissions","props","state","listMissions","getMissions","bind","i","nomission1","statut1","ref","database","once","then","snapshot","mission","val","nomission","statut","setState","concat","tmpserialnumber","missioncount","missionRef","on","snap","serialnumber","datededebut","slice","valueOf","length","charAt","getMissionCount","endserialnumber","extra","ville","typedetablissement","region","specialite","type","datedefin","heurededebut","heuredefin","remuneration","commentaires","date1","date2","returnarray","currentDate","push","Date","getTime","e","preventDefault","getSerialNumber","ajouterMission","tabdates","getDates","stringdate","getFullYear","getMonth","getDate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AjoutMissions.css'\n\nimport listetypedetablissement from '../../Jasons/listetypedetablissement.json'\nimport listespecialite from '../../Jasons/listespecialite.json'\nimport listetype from '../../Jasons/listetype.json'\n\nimport * as firebase from 'firebase';\n\n\nexport default class AjoutMissions extends React.Component {\n  constructor(props) {\n        super(props);\n        this.state = {\n          listMissions:[],\n        };\n\n        this.getMissions=this.getMissions.bind(this);\n      }\n\n  getMissions(){\n    let i=0;\n    let nomission1=\"\";\n    let statut1= \"\";\n\n    const ref = firebase.database().ref('missions');\n    ref.once('value').then( function(snapshot){\n      let mission=snapshot.val();\n      nomission1=mission.nomission;\n      statut1=mission.statut;\n      this.setState({\n        listMissions:this.state.listMissions.concat({mission:nomission1, statut:statut1})\n      });\n      })\n      return(\n        <div>\n          <br></br>\n          <br></br>\n          <br></br>\n          \n        </div>\n      )\n  }\n\n  getMissionCount(tmpserialnumber){\n    let missioncount = 0;\n\n    const missionRef = firebase.database().ref('missions');\n    missionRef.on('child_added', snap =>{\n\n      let mission = snap.val();\n      let serialnumber = \"\" + mission.datededebut.slice(0,4) + mission.datededebut.slice(5,7);\n\n      if(serialnumber.valueOf() === tmpserialnumber.valueOf() && mission.nomission.length<12)\n      {\n          missioncount ++;\n      }\n\n      if(serialnumber.valueOf() === tmpserialnumber.valueOf() && mission.nomission.length>12)\n      {\n        if(mission.nomission.charAt(12)==='1')\n        {\n          missioncount ++;\n        }\n\n      }\n\n\n    });\n\n    return missioncount;\n  }\n\n  getSerialNumber(tmpserialnumber){\n    let missioncount = this.getMissionCount(tmpserialnumber);\n\n    missioncount = missioncount + 1;\n    let serialnumber = \"\";\n\n    if(missioncount < 10)\n      serialnumber= \"000\" + missioncount;\n\n    if(missioncount < 100 && missioncount >= 10)\n      serialnumber= \"00\" + missioncount;\n\n    if(missioncount < 1000 && missioncount >= 100)\n      serialnumber= \"0\" + missioncount;\n\n    if(missioncount < 10000 && missioncount >= 1000)\n      serialnumber= \"\" + missioncount;\n\n    return serialnumber;\n  }\n\n  ajouterMission(datededebut,tmpserialnumber,endserialnumber,extra){\n\n    this.setState({nomission:\"M\" + tmpserialnumber + endserialnumber + extra})\n    //this.state.nomission =  \"M\" + tmpserialnumber + endserialnumber + extra ;\n    \n    // const missionsetRef = firebase.database().ref('missions/' + this.state.nomission).set(\n    // {\n    //   nomission: this.state.nomission,\n    //   ville: this.state.ville,\n    //   typedetablissement: this.state.typedetablissement,\n    //   region: this.state.region,\n    //   specialite: this.state.specialite,\n    //   type: this.state.type,\n    //   datededebut: datededebut,\n    //   datedefin: this.state.datedefin,\n    //   heurededebut: this.state.heurededebut,\n    //   heuredefin: this.state.heuredefin,\n    //   remuneration: this.state.remuneration,\n    //   commentaires: this.state.commentaires,\n    //   statut: \"Recherche en cours\"\n    // });\n    this.setState({\n      ville: \"\",\n      typedetablissement: \"\",\n      region: \"\",\n      specialite: \"\",\n      type: \"\",\n      datededebut:\"\",\n      datedefin: \"\",\n      heurededebut: \"\",\n      heuredefin: \"\",\n      remuneration: \"\",\n      commentaires: \"\",\n    })\n  }\n\n  getDates(date1, date2) {\n    let returnarray= new []();\n    //let returnarray= new Array();\n    let currentDate = date1;\n    while (currentDate.valueOf() <= date2.valueOf()) {\n        returnarray.push(new Date (currentDate));\n        currentDate = new Date(currentDate.getTime() + 24 * 60 * 60 * 1000);\n    }\n    return returnarray;\n  }\n\n  handleSubmit(e) {\n        e.preventDefault();\n\n    if (this.state.datededebut.length>0 && this.state.datedefin.length === 0)\n    {\n      let tmpserialnumber = \"\" + this.state.datededebut.slice(0,4) + this.state.datededebut.slice(5,7);\n      let endserialnumber = this.getSerialNumber(tmpserialnumber);\n\n      this.ajouterMission(this.state.datededebut,tmpserialnumber,endserialnumber,\"\");\n    }\n\n    if (this.state.datededebut.length>0 && this.state.datedefin.length>0)\n    {\n      let datededebut = new Date(this.state.datededebut.slice(0,4),this.state.datededebut.slice(5,7)-1,this.state.datededebut.slice(8,10));\n      let datedefin = new Date(this.state.datedefin.slice(0,4),this.state.datedefin.slice(5,7)-1,this.state.datedefin.slice(8,10));\n\n      let tabdates = [];\n      tabdates = this.getDates(datededebut,datedefin);\n\n      let tmpserialnumber = \"\" + this.state.datededebut.slice(0,4) + this.state.datededebut.slice(5,7);\n      let endserialnumber = this.getSerialNumber(tmpserialnumber);\n\n      for (let i = 0; i < tabdates.length; i++) {\n        let stringdate = \"\" + tabdates[i].getFullYear() + \"-\" + (tabdates[i].getMonth()+1) + \"-\" + tabdates[i].getDate();\n        this.ajouterMission(stringdate,tmpserialnumber,endserialnumber,\"-\" + (i+1));\n      }\n    }\n\n  }\n\n  componentDidMount(){\n\n    const missionRef = firebase.database().ref('missions');\n    missionRef.on('value', snap =>{\n      this.setState({\n        missioncount : snap.val()\n      });\n    });\n\n  }\n\n\n  render() {\n\n    \n    return(\n      <div>\n        {this.getMissions()}\n      </div>\n      \n    );\n   \n  }\n}\n"]},"metadata":{},"sourceType":"module"}