{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar fs = require('graceful-fs');\n\nvar writeFileAtomic = require('write-file-atomic');\n\nvar sortKeys = require('sort-keys');\n\nvar makeDir = require('make-dir');\n\nvar pify = require('pify');\n\nvar detectIndent = require('detect-indent');\n\nvar init = function init(fn, filePath, data, options) {\n  if (!filePath) {\n    throw new TypeError('Expected a filepath');\n  }\n\n  if (data === undefined) {\n    throw new TypeError('Expected data to stringify');\n  }\n\n  options = Object.assign({\n    indent: '\\t',\n    sortKeys: false\n  }, options);\n\n  if (options.sortKeys) {\n    data = sortKeys(data, {\n      deep: true,\n      compare: typeof options.sortKeys === 'function' ? options.sortKeys : undefined\n    });\n  }\n\n  return fn(filePath, data, options);\n};\n\nvar readFile = function readFile(filePath) {\n  return pify(fs.readFile)(filePath, 'utf8').catch(function () {});\n};\n\nvar main = function main(filePath, data, options) {\n  return (options.detectIndent ? readFile(filePath) : Promise.resolve()).then(function (string) {\n    var indent = string ? detectIndent(string).indent : options.indent;\n    var json = JSON.stringify(data, options.replacer, indent);\n    return pify(writeFileAtomic)(filePath, \"\".concat(json, \"\\n\"), {\n      mode: options.mode\n    });\n  });\n};\n\nvar mainSync = function mainSync(filePath, data, options) {\n  var indent = options.indent;\n\n  if (options.detectIndent) {\n    try {\n      var file = fs.readFileSync(filePath, 'utf8'); // eslint-disable-next-line prefer-destructuring\n\n      indent = detectIndent(file).indent;\n    } catch (error) {\n      if (error.code !== 'ENOENT') {\n        throw error;\n      }\n    }\n  }\n\n  var json = JSON.stringify(data, options.replacer, indent);\n  return writeFileAtomic.sync(filePath, \"\".concat(json, \"\\n\"), {\n    mode: options.mode\n  });\n};\n\nvar writeJsonFile = function writeJsonFile(filePath, data, options) {\n  return makeDir(path.dirname(filePath), {\n    fs: fs\n  }).then(function () {\n    return init(main, filePath, data, options);\n  });\n};\n\nmodule.exports = writeJsonFile;\nmodule.exports.default = writeJsonFile;\n\nmodule.exports.sync = function (filePath, data, options) {\n  makeDir.sync(path.dirname(filePath), {\n    fs: fs\n  });\n  init(mainSync, filePath, data, options);\n};","map":null,"metadata":{},"sourceType":"script"}