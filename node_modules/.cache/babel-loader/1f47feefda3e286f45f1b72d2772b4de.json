{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/cvoisin/Repos/actandcaredev/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/cvoisin/Repos/actandcaredev/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/cvoisin/Repos/actandcaredev/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/cvoisin/Repos/actandcaredev/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/cvoisin/Repos/actandcaredev/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _slicedToArray = require(\"/Users/cvoisin/Repos/actandcaredev/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar channel_1 = require(\"./channel\");\n\nvar constants_1 = require(\"./constants\");\n\nvar filter_1 = require(\"./filter\");\n\nvar units = [['m', 1], ['S', 1000], ['M', 60 * 1000], ['H', 60 * 60 * 1000]];\n\nfunction getDeadline(deadline) {\n  var now = new Date().getTime();\n  var timeoutMs = Math.max(deadline - now, 0);\n\n  for (var _i = 0; _i < units.length; _i++) {\n    var _units$_i = _slicedToArray(units[_i], 2),\n        unit = _units$_i[0],\n        factor = _units$_i[1];\n\n    var amount = timeoutMs / factor;\n\n    if (amount < 1e8) {\n      return String(Math.ceil(amount)) + unit;\n    }\n  }\n\n  throw new Error('Deadline is too far in the future');\n}\n\nvar DeadlineFilter =\n/*#__PURE__*/\nfunction (_filter_1$BaseFilter) {\n  _inherits(DeadlineFilter, _filter_1$BaseFilter);\n\n  function DeadlineFilter(channel, callStream) {\n    var _this;\n\n    _classCallCheck(this, DeadlineFilter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeadlineFilter).call(this));\n    _this.channel = channel;\n    _this.callStream = callStream;\n    _this.timer = null;\n    var callDeadline = callStream.getDeadline();\n\n    if (callDeadline instanceof Date) {\n      _this.deadline = callDeadline.getTime();\n    } else {\n      _this.deadline = callDeadline;\n    }\n\n    var now = new Date().getTime();\n    var timeout = _this.deadline - now;\n\n    if (timeout < 0) {\n      timeout = 0;\n    }\n\n    if (_this.deadline !== Infinity) {\n      _this.timer = setTimeout(function () {\n        callStream.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n      }, timeout);\n      callStream.on('status', function () {\n        return clearTimeout(_this.timer);\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(DeadlineFilter, [{\n    key: \"sendMetadata\",\n    value: function sendMetadata(metadata) {\n      var _this2 = this;\n\n      if (this.deadline === Infinity) {\n        return metadata;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (_this2.channel.getConnectivityState(false) === channel_1.ConnectivityState.READY) {\n          resolve(metadata);\n        } else {\n          var handleStateChange = function handleStateChange(newState) {\n            if (newState === channel_1.ConnectivityState.READY) {\n              resolve(metadata);\n\n              _this2.channel.removeListener('connectivityStateChanged', handleStateChange);\n            }\n          };\n\n          _this2.channel.on('connectivityStateChanged', handleStateChange);\n        }\n      }).then(function (finalMetadata) {\n        var timeoutString = getDeadline(_this2.deadline);\n        finalMetadata.set('grpc-timeout', timeoutString);\n        return finalMetadata;\n      });\n    }\n  }]);\n\n  return DeadlineFilter;\n}(filter_1.BaseFilter);\n\nexports.DeadlineFilter = DeadlineFilter;\n\nvar DeadlineFilterFactory =\n/*#__PURE__*/\nfunction () {\n  function DeadlineFilterFactory(channel) {\n    _classCallCheck(this, DeadlineFilterFactory);\n\n    this.channel = channel;\n  }\n\n  _createClass(DeadlineFilterFactory, [{\n    key: \"createFilter\",\n    value: function createFilter(callStream) {\n      return new DeadlineFilter(this.channel, callStream);\n    }\n  }]);\n\n  return DeadlineFilterFactory;\n}();\n\nexports.DeadlineFilterFactory = DeadlineFilterFactory;","map":null,"metadata":{},"sourceType":"script"}