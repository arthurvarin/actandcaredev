{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\src\\\\Components\\\\Stats\\\\Stats.js\";\nimport React from 'react';\nimport './Stats.css';\nimport BarExample from './bar';\nimport LineExample from './Line';\nimport data from '../../stats.json';\nimport HorizontalBarExample from './HorizontalBars';\nimport { SlideToggle } from 'react-slide-toggle';\n\nvar Stats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Stats, _React$Component);\n\n  function Stats(props) {\n    var _this;\n\n    _classCallCheck(this, Stats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stats).call(this, props));\n    _this.state = {\n      chartData: {},\n      statsvisiteurs: data,\n      id: \"\",\n      date: \"\",\n      visite: \" \",\n      recette: \" \"\n    };\n    _this.handledateChange = _this.handledateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlevisiteChange = _this.handlevisiteChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlerecetteChange = _this.handlerecetteChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"handledateChange\",\n    value: function handledateChange(event) {\n      this.setState({\n        date: event.target.value\n      });\n    }\n  }, {\n    key: \"handlevisiteChange\",\n    value: function handlevisiteChange(event) {\n      this.setState({\n        visite: event.target.value\n      });\n    }\n  }, {\n    key: \"handlerecetteChange\",\n    value: function handlerecetteChange(event) {\n      this.setState({\n        recette: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var statsvisiteurs = this.state.statsvisiteurs;\n      var datetab = this.state.datetab;\n      var visitetab = this.state.visitetab;\n      var recettetab = this.state.recettetab;\n      var newItem = {\n        \"id\": this.state.id,\n        \"date\": this.state.date,\n        \"visite\": this.state.visite,\n        \"recette\": this.state.recette\n      };\n      statsvisiteurs.push(newItem);\n      datetab.push(this.state.date);\n      visitetab.push(this.state.visite);\n      recettetab.push(this.state.recette);\n      this.setState({\n        statsvisiteurs: statsvisiteurs\n      });\n      this.setState({\n        id: \"\",\n        date: \"\",\n        visite: \"\",\n        recette: \"\"\n      });\n      this.setState({\n        datetab: datetab\n      });\n      this.setState({\n        visitetab: visitetab\n      });\n      this.setState({\n        recettetab: recettetab\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var statsvisiteurs;\n      var datetab = [];\n      var visitetab = [];\n      var recettetab = [];\n      statsvisiteurs = this.state.statsvisiteurs.map(function (statsvisiteur) {\n        visitetab.push(statsvisiteur.visite);\n        datetab.push(statsvisiteur.date);\n        recettetab.push(statsvisiteur.recette);\n      });\n      this.setState({\n        chartdata: {\n          labels: [50, 30, 20],\n          datasets: [{\n            label: 'Nombre de visites',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [50, 30, 20]\n          }]\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.getChartData();\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(SlideToggle, {\n        collapsed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, function (_ref) {\n        var onToggle = _ref.onToggle,\n            setCollapsibleElement = _ref.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"my-collapsible\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"row justify-content-md-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-block\",\n          id: \"addElement\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \" Ajouter une statistique\")), React.createElement(\"div\", {\n          className: \"my-collapsible__content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"my-collapsible__content-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: _this2.handleSubmit.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Date\"), React.createElement(\"input\", {\n          type: \"date\",\n          value: _this2.state.date,\n          onChange: _this2.handledateChange,\n          class: \"form-control\",\n          id: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          class: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"visite\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Nombre de visites\"), React.createElement(\"input\", {\n          type: \"number\",\n          value: _this2.state.visite,\n          onChange: _this2.handlevisiteChange,\n          class: \"form-control\",\n          id: \"visite\",\n          placeholder: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"form-group col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"recette\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Recette de la journ\\xE9e\"), React.createElement(\"div\", {\n          class: \"input-group input-group-default mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"input-group-prepend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"input-group-text\",\n          id: \"inputGroup-sizing-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"\\u20AC\")), React.createElement(\"input\", {\n          type: \"number\",\n          value: _this2.state.recette,\n          onChange: _this2.handlerecetteChange,\n          class: \"form-control\",\n          id: \"recette\",\n          placeholder: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        })))), React.createElement(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-md btn-block\",\n          id: \"addNewElement\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \" Ajouter \")))));\n      }), React.createElement(LineExample, {\n        chartData: this.state.chartData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Stats;\n}(React.Component);\n\nexport { Stats as default };","map":{"version":3,"sources":["C:\\Users\\Arthur\\Documents\\UI_PROJECT\\src\\Components\\Stats\\Stats.js"],"names":["React","BarExample","LineExample","data","HorizontalBarExample","SlideToggle","Stats","props","state","chartData","statsvisiteurs","id","date","visite","recette","handledateChange","bind","handlevisiteChange","handlerecetteChange","event","setState","target","value","e","preventDefault","datetab","visitetab","recettetab","newItem","push","forceUpdate","map","statsvisiteur","chartdata","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","getChartData","onToggle","setCollapsibleElement","handleSubmit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Stats.css'\r\nimport BarExample from './bar';\r\nimport LineExample from './Line';\r\nimport data from '../../stats.json'\r\nimport HorizontalBarExample from './HorizontalBars';\r\nimport { SlideToggle } from 'react-slide-toggle';\r\n\r\n\r\n\r\nexport default class Stats extends React.Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          chartData: {},\r\n          statsvisiteurs: data,\r\n          id:\"\",\r\n          date:\"\",\r\n          visite:\" \",\r\n          recette:\" \"\r\n        };\r\n        this.handledateChange = this.handledateChange.bind(this);\r\n        this.handlevisiteChange = this.handlevisiteChange.bind(this);\r\n        this.handlerecetteChange = this.handlerecetteChange.bind(this);\r\n\r\n}\r\n\r\n        handledateChange(event) {\r\n          this.setState({date: event.target.value});\r\n        }\r\n\r\n        handlevisiteChange(event) {\r\n          this.setState({visite: event.target.value});\r\n        }\r\n        handlerecetteChange(event) {\r\n          this.setState({recette: event.target.value});\r\n        }\r\n\r\nhandleSubmit(e) {\r\n        e.preventDefault();\r\n        let statsvisiteurs = this.state.statsvisiteurs;\r\n        let datetab = this.state.datetab;\r\n        let visitetab = this.state.visitetab;\r\n        let recettetab = this.state.recettetab;\r\n        let newItem = {\r\n          \"id\":this.state.id,\r\n          \"date\":this.state.date,\r\n          \"visite\":this.state.visite,\r\n          \"recette\":this.state.recette};\r\n          statsvisiteurs.push(newItem)\r\n          datetab.push(this.state.date);\r\n          visitetab.push(this.state.visite);\r\n          recettetab.push(this.state.recette);\r\n\r\n          this.setState({statsvisiteurs: statsvisiteurs});\r\n        this.setState({id:\"\",date:\"\",visite:\"\",recette:\"\"});\r\n        this.setState({datetab: datetab});\r\n        this.setState({visitetab: visitetab});\r\n        this.setState({recettetab: recettetab});\r\n        this.forceUpdate();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  getChartData(){\r\n\r\n    let statsvisiteurs;\r\n    let datetab = [];\r\n    let visitetab = [];\r\n    let recettetab = [];\r\n\r\n    statsvisiteurs = this.state.statsvisiteurs.map(statsvisiteur => {\r\n    visitetab.push(statsvisiteur.visite);\r\n    datetab.push(statsvisiteur.date);\r\n    recettetab.push(statsvisiteur.recette);\r\n    })\r\n\r\n    this.setState({\r\n        chartdata:{\r\n          labels: [50,30,20] ,\r\n          datasets: [\r\n            {\r\n              label: 'Nombre de visites',\r\n              fill: false,\r\n              lineTension: 0.1,\r\n              backgroundColor: 'rgba(75,192,192,0.4)',\r\n              borderColor: 'rgba(75,192,192,1)',\r\n              borderCapStyle: 'butt',\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              borderJoinStyle: 'miter',\r\n              pointBorderColor: 'rgba(75,192,192,1)',\r\n              pointBackgroundColor: '#fff',\r\n              pointBorderWidth: 1,\r\n              pointHoverRadius: 5,\r\n              pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n              pointHoverBorderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHitRadius: 10,\r\n              data : [50,30,20]\r\n            }\r\n          ]\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    this.getChartData();\r\n\r\n    return (\r\n          <div class=\"container\">\r\n          <SlideToggle collapsed >\r\n        {({onToggle, setCollapsibleElement}) => (\r\n          <div className=\"my-collapsible\">\r\n\r\n              <div class=\"row justify-content-md-center\">\r\n                <button type=\"button\" class=\"btn btn-lg btn-block\" id=\"addElement\" onClick={onToggle}> Ajouter une statistique</button>\r\n              </div>\r\n\r\n        <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n            <div className=\"my-collapsible__content-inner\">\r\n              <form onSubmit={this.handleSubmit.bind(this)}>\r\n                  <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                    <label for=\"date\">Date</label>\r\n                    <input type=\"date\" value={this.state.date} onChange={this.handledateChange} class=\"form-control\" id=\"date\"/>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                      <label for=\"visite\">Nombre de visites</label>\r\n                      <input type=\"number\" value={this.state.visite} onChange={this.handlevisiteChange} class=\"form-control\" id=\"visite\" placeholder=\"\"/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                      <label for=\"recette\">Recette de la journée</label>\r\n                      <div class=\"input-group input-group-default mb-3\">\r\n                          <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">€</span>\r\n                          </div>\r\n                            <input type=\"number\" value={this.state.recette} onChange={this.handlerecetteChange} class=\"form-control\" id=\"recette\" placeholder=\"0\"/>\r\n                      </div>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <button type=\"submit\" class=\"btn btn-md btn-block\" id=\"addNewElement\" onClick={onToggle}> Ajouter </button>\r\n             </form>\r\n             </div>\r\n      </div>\r\n             </div>\r\n             )}\r\n             </SlideToggle>\r\n\r\n            <LineExample chartData={this.state.chartData}/>\r\n          </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}