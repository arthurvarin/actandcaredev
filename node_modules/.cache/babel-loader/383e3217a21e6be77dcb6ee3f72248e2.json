{"ast":null,"code":"'use strict';\n\nvar isPlainObj = require('is-plain-obj');\n\nmodule.exports = function (obj, opts) {\n  if (!isPlainObj(obj)) {\n    throw new TypeError('Expected a plain object');\n  }\n\n  opts = opts || {}; // DEPRECATED\n\n  if (typeof opts === 'function') {\n    throw new TypeError('Specify the compare function as an option instead');\n  }\n\n  var deep = opts.deep;\n  var seenInput = [];\n  var seenOutput = [];\n\n  var sortKeys = function sortKeys(x) {\n    var seenIndex = seenInput.indexOf(x);\n\n    if (seenIndex !== -1) {\n      return seenOutput[seenIndex];\n    }\n\n    var ret = {};\n    var keys = Object.keys(x).sort(opts.compare);\n    seenInput.push(x);\n    seenOutput.push(ret);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var val = x[key];\n\n      if (deep && Array.isArray(val)) {\n        var retArr = [];\n\n        for (var j = 0; j < val.length; j++) {\n          retArr[j] = isPlainObj(val[j]) ? sortKeys(val[j]) : val[j];\n        }\n\n        ret[key] = retArr;\n        continue;\n      }\n\n      ret[key] = deep && isPlainObj(val) ? sortKeys(val) : val;\n    }\n\n    return ret;\n  };\n\n  return sortKeys(obj);\n};","map":null,"metadata":{},"sourceType":"script"}