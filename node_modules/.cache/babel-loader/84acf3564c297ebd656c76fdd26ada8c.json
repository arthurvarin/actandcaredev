{"ast":null,"code":"\"use strict\";\n\nmodule.exports = common;\nvar commonRe = /\\/|\\./;\n/**\r\n * Provides common type definitions.\r\n * Can also be used to provide additional google types or your own custom types.\r\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\r\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\r\n * @returns {undefined}\r\n * @property {INamespace} google/protobuf/any.proto Any\r\n * @property {INamespace} google/protobuf/duration.proto Duration\r\n * @property {INamespace} google/protobuf/empty.proto Empty\r\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\r\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\r\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\r\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\r\n * @example\r\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\r\n * protobuf.common(\"descriptor\", descriptorJson);\r\n *\r\n * // manually provides a custom definition (uses my.foo namespace)\r\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\r\n */\n\nfunction common(name, json) {\n  if (!commonRe.test(name)) {\n    name = \"google/protobuf/\" + name + \".proto\";\n    json = {\n      nested: {\n        google: {\n          nested: {\n            protobuf: {\n              nested: json\n            }\n          }\n        }\n      }\n    };\n  }\n\n  common[name] = json;\n} // Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\n\ncommon(\"any\", {\n  /**\r\n   * Properties of a google.protobuf.Any message.\r\n   * @interface IAny\r\n   * @type {Object}\r\n   * @property {string} [typeUrl]\r\n   * @property {Uint8Array} [bytes]\r\n   * @memberof common\r\n   */\n  Any: {\n    fields: {\n      type_url: {\n        type: \"string\",\n        id: 1\n      },\n      value: {\n        type: \"bytes\",\n        id: 2\n      }\n    }\n  }\n});\nvar timeType;\ncommon(\"duration\", {\n  /**\r\n   * Properties of a google.protobuf.Duration message.\r\n   * @interface IDuration\r\n   * @type {Object}\r\n   * @property {number|Long} [seconds]\r\n   * @property {number} [nanos]\r\n   * @memberof common\r\n   */\n  Duration: timeType = {\n    fields: {\n      seconds: {\n        type: \"int64\",\n        id: 1\n      },\n      nanos: {\n        type: \"int32\",\n        id: 2\n      }\n    }\n  }\n});\ncommon(\"timestamp\", {\n  /**\r\n   * Properties of a google.protobuf.Timestamp message.\r\n   * @interface ITimestamp\r\n   * @type {Object}\r\n   * @property {number|Long} [seconds]\r\n   * @property {number} [nanos]\r\n   * @memberof common\r\n   */\n  Timestamp: timeType\n});\ncommon(\"empty\", {\n  /**\r\n   * Properties of a google.protobuf.Empty message.\r\n   * @interface IEmpty\r\n   * @memberof common\r\n   */\n  Empty: {\n    fields: {}\n  }\n});\ncommon(\"struct\", {\n  /**\r\n   * Properties of a google.protobuf.Struct message.\r\n   * @interface IStruct\r\n   * @type {Object}\r\n   * @property {Object.<string,IValue>} [fields]\r\n   * @memberof common\r\n   */\n  Struct: {\n    fields: {\n      fields: {\n        keyType: \"string\",\n        type: \"Value\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.Value message.\r\n   * @interface IValue\r\n   * @type {Object}\r\n   * @property {string} [kind]\r\n   * @property {0} [nullValue]\r\n   * @property {number} [numberValue]\r\n   * @property {string} [stringValue]\r\n   * @property {boolean} [boolValue]\r\n   * @property {IStruct} [structValue]\r\n   * @property {IListValue} [listValue]\r\n   * @memberof common\r\n   */\n  Value: {\n    oneofs: {\n      kind: {\n        oneof: [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"]\n      }\n    },\n    fields: {\n      nullValue: {\n        type: \"NullValue\",\n        id: 1\n      },\n      numberValue: {\n        type: \"double\",\n        id: 2\n      },\n      stringValue: {\n        type: \"string\",\n        id: 3\n      },\n      boolValue: {\n        type: \"bool\",\n        id: 4\n      },\n      structValue: {\n        type: \"Struct\",\n        id: 5\n      },\n      listValue: {\n        type: \"ListValue\",\n        id: 6\n      }\n    }\n  },\n  NullValue: {\n    values: {\n      NULL_VALUE: 0\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.ListValue message.\r\n   * @interface IListValue\r\n   * @type {Object}\r\n   * @property {Array.<IValue>} [values]\r\n   * @memberof common\r\n   */\n  ListValue: {\n    fields: {\n      values: {\n        rule: \"repeated\",\n        type: \"Value\",\n        id: 1\n      }\n    }\n  }\n});\ncommon(\"wrappers\", {\n  /**\r\n   * Properties of a google.protobuf.DoubleValue message.\r\n   * @interface IDoubleValue\r\n   * @type {Object}\r\n   * @property {number} [value]\r\n   * @memberof common\r\n   */\n  DoubleValue: {\n    fields: {\n      value: {\n        type: \"double\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.FloatValue message.\r\n   * @interface IFloatValue\r\n   * @type {Object}\r\n   * @property {number} [value]\r\n   * @memberof common\r\n   */\n  FloatValue: {\n    fields: {\n      value: {\n        type: \"float\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.Int64Value message.\r\n   * @interface IInt64Value\r\n   * @type {Object}\r\n   * @property {number|Long} [value]\r\n   * @memberof common\r\n   */\n  Int64Value: {\n    fields: {\n      value: {\n        type: \"int64\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.UInt64Value message.\r\n   * @interface IUInt64Value\r\n   * @type {Object}\r\n   * @property {number|Long} [value]\r\n   * @memberof common\r\n   */\n  UInt64Value: {\n    fields: {\n      value: {\n        type: \"uint64\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.Int32Value message.\r\n   * @interface IInt32Value\r\n   * @type {Object}\r\n   * @property {number} [value]\r\n   * @memberof common\r\n   */\n  Int32Value: {\n    fields: {\n      value: {\n        type: \"int32\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.UInt32Value message.\r\n   * @interface IUInt32Value\r\n   * @type {Object}\r\n   * @property {number} [value]\r\n   * @memberof common\r\n   */\n  UInt32Value: {\n    fields: {\n      value: {\n        type: \"uint32\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.BoolValue message.\r\n   * @interface IBoolValue\r\n   * @type {Object}\r\n   * @property {boolean} [value]\r\n   * @memberof common\r\n   */\n  BoolValue: {\n    fields: {\n      value: {\n        type: \"bool\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.StringValue message.\r\n   * @interface IStringValue\r\n   * @type {Object}\r\n   * @property {string} [value]\r\n   * @memberof common\r\n   */\n  StringValue: {\n    fields: {\n      value: {\n        type: \"string\",\n        id: 1\n      }\n    }\n  },\n\n  /**\r\n   * Properties of a google.protobuf.BytesValue message.\r\n   * @interface IBytesValue\r\n   * @type {Object}\r\n   * @property {Uint8Array} [value]\r\n   * @memberof common\r\n   */\n  BytesValue: {\n    fields: {\n      value: {\n        type: \"bytes\",\n        id: 1\n      }\n    }\n  }\n});\ncommon(\"field_mask\", {\n  /**\r\n   * Properties of a google.protobuf.FieldMask message.\r\n   * @interface IDoubleValue\r\n   * @type {Object}\r\n   * @property {number} [value]\r\n   * @memberof common\r\n   */\n  FieldMask: {\n    fields: {\n      paths: {\n        rule: \"repeated\",\n        type: \"string\",\n        id: 1\n      }\n    }\n  }\n});\n/**\r\n * Gets the root definition of the specified common proto file.\r\n *\r\n * Bundled definitions are:\r\n * - google/protobuf/any.proto\r\n * - google/protobuf/duration.proto\r\n * - google/protobuf/empty.proto\r\n * - google/protobuf/field_mask.proto\r\n * - google/protobuf/struct.proto\r\n * - google/protobuf/timestamp.proto\r\n * - google/protobuf/wrappers.proto\r\n *\r\n * @param {string} file Proto file name\r\n * @returns {INamespace|null} Root definition or `null` if not defined\r\n */\n\ncommon.get = function get(file) {\n  return common[file] || null;\n};","map":null,"metadata":{},"sourceType":"script"}