{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar IAMAuth =\n/** @class */\nfunction () {\n  /**\n   * IAM credentials.\n   *\n   * @param selector the iam authority selector\n   * @param token the token\n   * @constructor\n   */\n  function IAMAuth(selector, token) {\n    this.selector = selector;\n    this.token = token;\n    this.selector = selector;\n    this.token = token;\n  }\n  /**\n   * Indicates whether the credential requires scopes to be created by calling\n   * createdScoped before use.\n   *\n   * @return always false\n   */\n\n\n  IAMAuth.prototype.createScopedRequired = function () {\n    // IAM authorization does not use scopes.\n    return false;\n  };\n  /**\n   * Pass the selector and token to the metadataFn callback.\n   *\n   * @param unused_uri is required of the credentials interface\n   * @param metadataFn a callback invoked with object\n   *                   containing request metadata.\n   */\n\n\n  IAMAuth.prototype.getRequestMetadata = function (unusedUri, metadataFn) {\n    metadataFn(null, {\n      'x-goog-iam-authority-selector': this.selector,\n      'x-goog-iam-authorization-token': this.token\n    });\n  };\n\n  return IAMAuth;\n}();\n\nexports.IAMAuth = IAMAuth;","map":null,"metadata":{},"sourceType":"script"}