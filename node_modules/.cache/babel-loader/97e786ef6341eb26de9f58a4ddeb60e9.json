{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _wrapWords = require('./wrapWords');\n\nvar _wrapWords2 = _interopRequireDefault(_wrapWords);\n\nvar _typesetter = require('./typesetter');\n\nvar _typesetter2 = _interopRequireDefault(_typesetter);\n\nvar _injectEngines = require('./injectEngines');\n\nvar _injectEngines2 = _interopRequireDefault(_injectEngines);\n\nvar _generateGlyphs = require('./generateGlyphs');\n\nvar _generateGlyphs2 = _interopRequireDefault(_generateGlyphs);\n\nvar _resolveYOffset = require('./resolveYOffset');\n\nvar _resolveYOffset2 = _interopRequireDefault(_resolveYOffset);\n\nvar _preprocessRuns = require('./preprocessRuns');\n\nvar _preprocessRuns2 = _interopRequireDefault(_preprocessRuns);\n\nvar _splitParagraphs = require('./splitParagraphs');\n\nvar _splitParagraphs2 = _interopRequireDefault(_splitParagraphs);\n\nvar _resolveAttachments = require('./resolveAttachments');\n\nvar _resolveAttachments2 = _interopRequireDefault(_resolveAttachments);\n\nvar _applyDefaultStyles = require('./applyDefaultStyles');\n\nvar _applyDefaultStyles2 = _interopRequireDefault(_applyDefaultStyles);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a list of Container objects\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n */\n\n\nvar compose = function compose() {\n  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n};\n\nvar map = function map(fn) {\n  return function (array) {\n    for (var _len2 = arguments.length, other = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      other[_key2 - 1] = arguments[_key2];\n    }\n\n    return array.map(function (e, index) {\n      return fn.apply(undefined, [e].concat(other, [index]));\n    });\n  };\n};\n\nvar LayoutEngine = function () {\n  function LayoutEngine(engines) {\n    (0, _classCallCheck3.default)(this, LayoutEngine);\n    this.engines = (0, _injectEngines2.default)(engines);\n  }\n\n  LayoutEngine.prototype.layout = function layout(attributedString, containers) {\n    compose((0, _typesetter2.default)(this.engines)(containers), map((0, _resolveYOffset2.default)(this.engines)), map((0, _resolveAttachments2.default)(this.engines)), map((0, _generateGlyphs2.default)(this.engines)), map((0, _wrapWords2.default)(this.engines)), (0, _splitParagraphs2.default)(this.engines), (0, _preprocessRuns2.default)(this.engines), (0, _applyDefaultStyles2.default)(this.engines))(attributedString);\n  };\n\n  return LayoutEngine;\n}();\n\nexports.default = LayoutEngine;","map":null,"metadata":{},"sourceType":"script"}