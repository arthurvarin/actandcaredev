{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2016, Google Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar grpc_1 = require(\"./grpc\");\n\nvar operationsClient = require(\"./operations_client\");\n\nvar routingHeader = require(\"./routing_header\");\n\nexports.routingHeader = routingHeader;\n\nvar google_auth_library_1 = require(\"google-auth-library\");\n\nexports.GoogleAuth = google_auth_library_1.GoogleAuth;\n\nvar api_callable_1 = require(\"./api_callable\");\n\nexports.createApiCall = api_callable_1.createApiCall;\n\nvar bundling_1 = require(\"./bundling\");\n\nexports.BundleDescriptor = bundling_1.BundleDescriptor;\nexports.BundleExecutor = bundling_1.BundleExecutor;\n\nvar gax_1 = require(\"./gax\");\n\nexports.constructSettings = gax_1.constructSettings;\n\nvar GoogleError_1 = require(\"./GoogleError\");\n\nexports.GoogleError = GoogleError_1.GoogleError;\n\nvar grpc_2 = require(\"./grpc\");\n\nexports.ClientStub = grpc_2.ClientStub;\nexports.GoogleProtoFilesRoot = grpc_2.GoogleProtoFilesRoot;\nexports.GrpcClient = grpc_2.GrpcClient;\n\nvar longrunning_1 = require(\"./longrunning\");\n\nexports.LongrunningDescriptor = longrunning_1.LongrunningDescriptor;\nexports.operation = longrunning_1.operation;\n\nvar paged_iteration_1 = require(\"./paged_iteration\");\n\nexports.PageDescriptor = paged_iteration_1.PageDescriptor;\n\nvar path_template_1 = require(\"./path_template\");\n\nexports.PathTemplate = path_template_1.PathTemplate;\n\nvar streaming_1 = require(\"./streaming\");\n\nexports.StreamDescriptor = streaming_1.StreamDescriptor;\nexports.StreamType = streaming_1.StreamType;\n\nfunction lro(options) {\n  options = Object.assign({\n    scopes: lro.ALL_SCOPES\n  }, options);\n  var gaxGrpc = new grpc_1.GrpcClient(options);\n  return new operationsClient.OperationsClientBuilder(gaxGrpc);\n}\n\nexports.lro = lro;\nlro.SERVICE_ADDRESS = operationsClient.SERVICE_ADDRESS;\nlro.ALL_SCOPES = operationsClient.ALL_SCOPES;\nexports.createByteLengthFunction = grpc_1.GrpcClient.createByteLengthFunction;\nexports.version = require('../../package.json').version;","map":null,"metadata":{},"sourceType":"script"}