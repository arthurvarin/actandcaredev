{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar resolveAttachments = function resolveAttachments() {\n  return function (paragraph) {\n    for (var _iterator = paragraph.value.glyphRuns, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphRun = _ref;\n      var _glyphRun$attributes = glyphRun.attributes,\n          font = _glyphRun$attributes.font,\n          attachment = _glyphRun$attributes.attachment;\n      if (!attachment) continue;\n      var objectReplacement = font.glyphForCodePoint(0xfffc);\n\n      for (var i = 0; i < glyphRun.length; i++) {\n        var glyph = glyphRun.glyphs[i];\n        var position = glyphRun.positions[i];\n\n        if (glyph === objectReplacement) {\n          position.xAdvance = attachment.width;\n        }\n      }\n    }\n\n    return paragraph;\n  };\n};\n\nexports.default = resolveAttachments;","map":null,"metadata":{},"sourceType":"script"}