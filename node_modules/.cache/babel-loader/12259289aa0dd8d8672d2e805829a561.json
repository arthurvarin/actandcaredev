{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path = require(\"path\");\n\nvar loader = require(\"./load\");\n\nfunction getProtoPath() {\n  for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n    paths[_key] = arguments[_key];\n  }\n\n  return path.join.apply(path, [__dirname, '../../', 'google'].concat(paths));\n}\n\nexports.getProtoPath = getProtoPath;\nexports.load = loader.load;\nexports.loadSync = loader.loadSync;\nexports.appengine = {\n  v1: getProtoPath('appengine/v1/appengine.proto')\n};\nexports.bigtable = {\n  v1: getProtoPath('bigtable/v1/bigtable_service.proto'),\n  v2: getProtoPath('bigtable/v2/bigtable.proto'),\n  admin: {\n    v1: getProtoPath('bigtable/admin/table/v1/bigtable_table_service.proto'),\n    v2: {\n      instance: getProtoPath('bigtable/admin/v2/bigtable_instance_admin.proto'),\n      table: getProtoPath('bigtable/admin/v2/bigtable_table_admin.proto')\n    }\n  }\n};\nexports.cloudtrace = {\n  v1: getProtoPath('devtools/cloudtrace/v1/trace.proto')\n};\nexports.container = {\n  v1: getProtoPath('container/v1/cluster_service.proto')\n};\nexports.datastore = {\n  v1: getProtoPath('datastore/v1/datastore.proto'),\n  v1beta3: getProtoPath('datastore/v1beta3/datastore.proto')\n};\nexports.dlp = {\n  v2beta1: getProtoPath('privacy/dlp/v2beta1/dlp.proto')\n};\nexports.embeddedAssistant = {\n  v1alpha1: getProtoPath('assistant/embedded/v1alpha1/embedded_assistant.proto'),\n  v1alpha2: getProtoPath('assistant/embedded/v1alpha2/embedded_assistant.proto')\n};\nexports.firestore = {\n  v1beta1: getProtoPath('firestore/v1beta1/firestore.proto'),\n  admin: {\n    v1beta1: getProtoPath('firestore/admin/v1beta1/firestore_admin.proto')\n  }\n};\nexports.functions = {\n  v1beta2: getProtoPath('cloud/functions/v1beta2/functions.proto')\n};\nexports.iam = {\n  v1: getProtoPath('iam/v1/iam_policy.proto'),\n  admin: {\n    v1: getProtoPath('iam/admin/v1/iam.proto')\n  }\n};\nexports.language = {\n  v1beta1: getProtoPath('cloud/language/v1beta1/language_service.proto'),\n  v1: getProtoPath('cloud/language/v1/language_service.proto')\n};\nexports.logging = {\n  v2: getProtoPath('logging/v2/logging.proto')\n};\nexports.monitoring = {\n  v3: {\n    group: getProtoPath('monitoring/v3/group_service.proto'),\n    metric: getProtoPath('monitoring/v3/metric_service.proto')\n  }\n};\nexports.pubsub = {\n  v1: getProtoPath('pubsub/v1/pubsub.proto'),\n  v1beta2: getProtoPath('pubsub/v1beta2/pubsub.proto')\n};\nexports.spanner = {\n  v1: getProtoPath('spanner/v1/spanner.proto'),\n  admin: {\n    v1: {\n      database: getProtoPath('spanner/admin/database/v1/spanner_database_admin.proto'),\n      instance: getProtoPath('spanner/admin/instance/v1/spanner_instance_admin.proto')\n    }\n  }\n};\nexports.speech = {\n  v1beta1: getProtoPath('cloud/speech/v1beta1/cloud_speech.proto'),\n  v1: getProtoPath('cloud/speech/v1/cloud_speech.proto'),\n  v2: getProtoPath('cloud/speech/v2/cloud_speech.proto')\n};\nexports.storagetransfer = {\n  v1: getProtoPath('storagetransfer/v1/transfer.proto')\n};\nexports.videointelligence = {\n  v1beta1: getProtoPath('cloud/videointelligence/v1beta1/video_intelligence.proto')\n};\nexports.vision = {\n  v1: getProtoPath('cloud/vision/v1/image_annotator.proto')\n};","map":null,"metadata":{},"sourceType":"script"}