{"ast":null,"code":"/**\n * @license\n * Copyright 2016 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * @module\n * @private\n */\n'use strict';\n\nvar binary = require('node-pre-gyp/lib/pre-binding');\n\nvar path = require('path');\n\nvar binding_path = binary.find(path.resolve(path.join(__dirname, '../package.json')));\nvar binding;\n\ntry {\n  binding = require(binding_path);\n} catch (e) {\n  var fs = require('fs');\n\n  var searchPath = path.dirname(path.dirname(binding_path));\n  var searchName = path.basename(path.dirname(binding_path));\n  var foundNames;\n\n  try {\n    foundNames = fs.readdirSync(searchPath);\n  } catch (readDirError) {\n    var message = \"The gRPC binary module was not installed. This may be fixed by running \\\"npm rebuild\\\"\\nOriginal error: \".concat(e.message);\n    var error = new Error(message);\n    error.code = e.code;\n    throw error;\n  }\n\n  if (foundNames.indexOf(searchName) === -1) {\n    var _message = \"Failed to load gRPC binary module because it was not installed for the current system\\nExpected directory: \".concat(searchName, \"\\nFound: [\").concat(foundNames.join(', '), \"]\\nThis problem can often be fixed by running \\\"npm rebuild\\\" on the current system\\nOriginal error: \").concat(e.message);\n\n    var _error = new Error(_message);\n\n    _error.code = e.code;\n    throw _error;\n  } else {\n    throw e;\n  }\n}\n\nmodule.exports = binding;","map":null,"metadata":{},"sourceType":"script"}