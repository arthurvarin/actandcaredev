{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arthur\\\\Documents\\\\GitHub\\\\actandcaredev\\\\src\\\\Components\\\\Batiment\\\\Batiment.js\";\nimport React from 'react';\nimport '../Attraction/Attraction.css';\nimport BatimentCard from '../AttractionCard/BatimentCard.js';\nimport data from '../../batiment.json';\nimport { SlideToggle } from 'react-slide-toggle';\nimport ReactNotify from 'react-notify';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar uuidv4 = require('uuid/v4');\n\nvar Attraction =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Attraction, _React$Component);\n\n  function Attraction(props) {\n    var _this;\n\n    _classCallCheck(this, Attraction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Attraction).call(this, props));\n\n    _this.submit = function (id, name, date) {\n      confirmAlert({\n        message: 'Etes-vous sûr de vouloir supprimer cette attraction ?',\n        buttons: [{\n          label: 'Oui',\n          onClick: function onClick() {\n            return _this.deleteItem(id);\n          }\n        }, {\n          label: 'Non'\n        }]\n      });\n    };\n\n    _this.state = {\n      attractions: data,\n      id: \"\",\n      name: \"\",\n      date: \" \",\n      modal: false,\n      modified: false\n    };\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateItem = _this.updateItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Attraction, [{\n    key: \"toggle\",\n    value: function toggle(id, name, date) {\n      this.setState({\n        modal: !this.state.modal\n      });\n      var attractions;\n      attractions = this.state.attractions;\n\n      for (var i = 0; i < attractions.length; ++i) {\n        if (attractions[i].id == id) {\n          this.setState({\n            id: attractions[i].id,\n            name: attractions[i].name,\n            date: attractions[i].date\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      this.setState({\n        name: event.target.value\n      });\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(event) {\n      this.setState({\n        date: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var attractions = this.state.attractions;\n      var newItem = {\n        \"name\": this.state.name,\n        \"date\": this.state.date\n      };\n      attractions.push(newItem);\n      this.setState({\n        attractions: attractions\n      });\n      this.setState({\n        name: \"\",\n        date: \"\"\n      });\n      this.refs.notificator.success(\"Succès\", \"Attraction ajoutée !\", 4000);\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(id) {\n      var attractions;\n      attractions = this.state.attractions;\n\n      for (var i = 0; i < attractions.length; ++i) {\n        if (attractions[i].id == id) {\n          attractions[i].deleted = true;\n          attractions[i].modified = false;\n        }\n      }\n\n      this.setState({\n        attractions: attractions\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      if (this.state.modified) {\n        this.toggle();\n        this.updateItem();\n        this.setState({\n          modified: false\n        });\n      }\n    }\n  }, {\n    key: \"updateItem\",\n    value: function updateItem() {\n      this.setState({\n        modified: true\n      });\n      var attractions;\n      attractions = this.state.attractions;\n\n      for (var i = 0; i < attractions.length; ++i) {\n        if (attractions[i].id == this.state.id) {\n          attractions[i].name = this.state.name;\n          attractions[i].date = this.state.date;\n        }\n      }\n\n      this.setState({\n        attractions: attractions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var attractions;\n      attractions = this.state.attractions.map(function (attraction) {\n        if (!attraction.deleted) {\n          return React.createElement(\"div\", {\n            class: \"col col-lg-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, React.createElement(BatimentCard, {\n            updateItem: _this3.toggle,\n            deleteItem: _this3.submit,\n            class: \"card\",\n            id: attraction.id,\n            name: attraction.name,\n            date: attraction.date,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }));\n        }\n      });\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(SlideToggle, {\n        collapsed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, function (_ref) {\n        var onToggle = _ref.onToggle,\n            setCollapsibleElement = _ref.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"my-collapsible\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"row justify-content-md-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-block\",\n          id: \"addElement\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \" Ajouter un b\\xE2timent \")), React.createElement(\"div\", {\n          className: \"my-collapsible__content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"my-collapsible__content-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: _this3.handleSubmit.bind(_this3),\n          class: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"nomdelattraction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Nom de B\\xE2timent \"), React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          value: _this3.state.name,\n          onChange: _this3.handleNameChange,\n          placeholder: \"B\\xE2timent 4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"form-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"form-group col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"datedelinstallation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Date de l'installation\"), React.createElement(\"input\", {\n          type: \"date\",\n          class: \"form-control\",\n          value: _this3.state.date,\n          onChange: _this3.handleDateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }))), React.createElement(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-md btn-block\",\n          id: \"addNewElement\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \" Ajouter \")))));\n      })), React.createElement(\"div\", {\n        class: \"row  justify-content-around\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Modifier un b\\xE2timent\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"nomdelattraction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Nom du b\\xE2timent\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        value: this.state.name,\n        onChange: this.handleNameChange,\n        placeholder: \"B\\xE2timent 4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"datedelinstallation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Date de l'installation\"), React.createElement(\"input\", {\n        type: \"date\",\n        class: \"form-control\",\n        value: this.state.date,\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        onClick: this.updateItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Modifier\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Annuler\"))), attractions), React.createElement(ReactNotify, {\n        ref: \"notificator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Attraction;\n}(React.Component);\n\nexport { Attraction as default };","map":{"version":3,"sources":["C:\\Users\\Arthur\\Documents\\GitHub\\actandcaredev\\src\\Components\\Batiment\\Batiment.js"],"names":["React","BatimentCard","data","SlideToggle","ReactNotify","confirmAlert","Button","Modal","ModalHeader","ModalBody","ModalFooter","uuidv4","require","Attraction","props","submit","id","name","date","message","buttons","label","onClick","deleteItem","state","attractions","modal","modified","handleNameChange","bind","handleDateChange","updateItem","toggle","setState","i","length","event","target","value","e","preventDefault","newItem","push","refs","notificator","success","deleted","timerID","setInterval","tick","clearInterval","map","attraction","onToggle","setCollapsibleElement","handleSubmit","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../Attraction/Attraction.css'\r\nimport BatimentCard from '../AttractionCard/BatimentCard.js'\r\nimport data from '../../batiment.json'\r\nimport { SlideToggle } from 'react-slide-toggle';\r\nimport ReactNotify from 'react-notify';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n\r\nexport default class Attraction extends React.Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          attractions: data,\r\n          id:\"\",\r\n          name:\"\",\r\n          date:\" \",\r\n          modal: false,\r\n          modified:false,\r\n        };\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.updateItem = this.updateItem.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n      }\r\n      toggle(id,name,date) {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        });\r\n        let attractions;\r\n        attractions = this.state.attractions\r\n\r\n        for(let i = 0; i< attractions.length; ++i)\r\n          if(attractions[i].id == id){\r\n            this.setState({\r\n              id:attractions[i].id,\r\n              name:attractions[i].name,\r\n              date:attractions[i].date\r\n            })\r\n          }\r\n\r\n      }\r\n\r\n        handleNameChange(event) {\r\n          this.setState({name: event.target.value});\r\n        }\r\n\r\n\r\n        handleDateChange(event) {\r\n          this.setState({date: event.target.value});\r\n        }\r\n\r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        let attractions = this.state.attractions;\r\n        let newItem = {\r\n          \"name\":this.state.name,\r\n          \"date\":this.state.date};\r\n          attractions.push(newItem)\r\n          this.setState({attractions: attractions});\r\n        this.setState({name:\"\",date:\"\"});\r\n      this.refs.notificator.success(\"Succès\", \"Attraction ajoutée !\", 4000);\r\n    }\r\n    deleteItem(id){\r\n      let attractions;\r\n      attractions = this.state.attractions\r\n      for(let i = 0; i< attractions.length; ++i)\r\n        if(attractions[i].id == id){\r\n          attractions[i].deleted = true;\r\n          attractions[i].modified = false;\r\n        }\r\n\r\n      this.setState({attractions: attractions});\r\n    }\r\n\r\n    componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    if(this.state.modified){\r\n          this.toggle();\r\n          this.updateItem();\r\n          this.setState({modified:false})\r\n    }\r\n\r\n  }\r\n\r\n    updateItem(){\r\n      this.setState({modified:true})\r\n      let attractions;\r\n      attractions = this.state.attractions\r\n\r\n      for(let i = 0; i< attractions.length; ++i)\r\n        if(attractions[i].id == this.state.id){\r\n          attractions[i].name = this.state.name;\r\n          attractions[i].date = this.state.date;\r\n\r\n\r\n        }\r\n      this.setState({attractions: attractions});\r\n\r\n\r\n    }\r\n\r\n    submit = (id,name,date) => {\r\n   confirmAlert({\r\n     message: 'Etes-vous sûr de vouloir supprimer cette attraction ?',\r\n     buttons: [\r\n       {\r\n         label: 'Oui',\r\n         onClick: () => this.deleteItem(id)\r\n       },\r\n       {\r\n         label: 'Non',\r\n\r\n       }\r\n     ]\r\n   })\r\n };\r\n\r\n\r\n  render() {\r\n    let attractions;\r\n    attractions = this.state.attractions.map(attraction => {\r\n\r\n    if(!attraction.deleted){\r\n        return(\r\n          <div class=\"col col-lg-5\">\r\n            <BatimentCard updateItem={this.toggle} deleteItem={this.submit} class=\"card\" id={attraction.id} name={attraction.name}  date={attraction.date} />\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n    <div class=\"container\">\r\n        <div>\r\n        <SlideToggle collapsed >\r\n          {({onToggle, setCollapsibleElement}) => (\r\n            <div className=\"my-collapsible\">\r\n            <div class=\"row justify-content-md-center\">\r\n              <button type=\"button\" class=\"btn btn-lg btn-block\" id=\"addElement\" onClick={onToggle}> Ajouter un bâtiment </button>\r\n            </div>\r\n      <div className=\"my-collapsible__content\" ref={setCollapsibleElement}>\r\n        <div className=\"my-collapsible__content-inner\">\r\n        <form onSubmit={this.handleSubmit.bind(this)} class=\"form\">\r\n\r\n        <div class=\"form-group\">\r\n        <label for=\"nomdelattraction\">Nom de Bâtiment </label>\r\n        <input type=\"text\" class=\"form-control\" value={this.state.name} onChange={this.handleNameChange} placeholder=\"Bâtiment 4\" />\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n        <div class=\"form-group col-md-12\">\r\n        <label for=\"datedelinstallation\">Date de l'installation</label>\r\n        <input type=\"date\" class=\"form-control\" value={this.state.date} onChange={this.handleDateChange} />\r\n        </div>\r\n\r\n\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-md btn-block\" id=\"addNewElement\" onClick={onToggle}> Ajouter </button>\r\n        </form>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n</SlideToggle>\r\n            </div>\r\n            <div class=\"row  justify-content-around\">\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Modifier un bâtiment</ModalHeader>\r\n          <ModalBody>\r\n          <form onSubmit={this.handleSubmit.bind(this)}>\r\n\r\n          <div class=\"form-group\">\r\n          <label for=\"nomdelattraction\">Nom du bâtiment</label>\r\n          <input type=\"text\" class=\"form-control\" value={this.state.name} onChange={this.handleNameChange} placeholder=\"Bâtiment 4\" />\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n          <div class=\"form-group col-md-12\">\r\n          <label for=\"datedelinstallation\">Date de l'installation</label>\r\n          <input type=\"date\" class=\"form-control\" value={this.state.date} onChange={this.handleDateChange} />\r\n          </div>\r\n\r\n\r\n          </div>\r\n          </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"primary\" onClick={this.updateItem}>Modifier</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.toggle}>Annuler</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n                {attractions}\r\n            </div>\r\n            <ReactNotify ref='notificator'/>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}