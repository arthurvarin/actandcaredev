{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arthur\\\\Documents\\\\UI_PROJECT\\\\src\\\\Components\\\\Stats\\\\Line.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2'; //const labelstab = ['Lundi 22 Octobre', 'Mardi 23 Octobre', 'Mercredi 24 Octobre', 'Jeudi 25 Octobre', 'Vendredi 26 Octobre', 'Samedi 27 Octobre', 'Dimanche 28 Octobre'];\n//const datatab = [65, 59, 80, 81, 56, 55, 40];\n\nvar line =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(line, _React$Component);\n\n  function line(props) {\n    var _this;\n\n    _classCallCheck(this, line);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(line).call(this, props));\n    _this.state = {\n      chartdata: {\n        labels: _this.props.dates,\n        datasets: [{\n          label: 'Nombre de visites',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: _this.props.visites\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(line, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Nombre de visiteurs\"), React.createElement(Line, {\n        data: this.state.chartdata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Nombre de visiteurs\"), React.createElement(Line, {\n        data: this.state.chartdata,\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          scales: {\n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Visites'\n              }\n            }],\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Dates'\n              }\n            }]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return line;\n}(React.Component);\n\nexport { line as default };\n;","map":{"version":3,"sources":["C:\\Users\\Arthur\\Documents\\UI_PROJECT\\src\\Components\\Stats\\Line.js"],"names":["React","Line","line","props","state","chartdata","labels","dates","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","visites","maintainAspectRatio","responsive","scales","yAxes","scaleLabel","display","labelString","xAxes","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB,C,CAEA;AACA;;IAEqBC,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWI,KADX;AAERC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,mBADT;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,WAAW,EAAE,GAHf;AAIEC,UAAAA,eAAe,EAAE,sBAJnB;AAKEC,UAAAA,WAAW,EAAE,oBALf;AAMEC,UAAAA,cAAc,EAAE,MANlB;AAOEC,UAAAA,UAAU,EAAE,EAPd;AAQEC,UAAAA,gBAAgB,EAAE,GARpB;AASEC,UAAAA,eAAe,EAAE,OATnB;AAUEC,UAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,UAAAA,oBAAoB,EAAE,MAXxB;AAYEC,UAAAA,gBAAgB,EAAE,CAZpB;AAaEC,UAAAA,gBAAgB,EAAE,CAbpB;AAcEC,UAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,UAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,UAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,UAAAA,WAAW,EAAE,CAjBf;AAkBEC,UAAAA,cAAc,EAAE,EAlBlB;AAmBEC,UAAAA,IAAI,EAAG,MAAKxB,KAAL,CAAWyB;AAnBpB,SADQ;AAFF;AADC,KAAb;AAFa;AAgCpB;;;;gDAE0B;AACzB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;6BACU;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,SAAvB;AAAkC,QAAA,OAAO,EAAE;AACzCwB,UAAAA,mBAAmB,EAAE,KADoB;AAEzCC,UAAAA,UAAU,EAAE,IAF6B;AAI7CC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CAAC;AACNC,cAAAA,UAAU,EAAE;AACRC,gBAAAA,OAAO,EAAE,IADD;AAERC,gBAAAA,WAAW,EAAE;AAFL;AADN,aAAD,CADD;AAONC,YAAAA,KAAK,EAAE,CAAC;AACNH,cAAAA,UAAU,EAAE;AACRC,gBAAAA,OAAO,EAAE,IADD;AAERC,gBAAAA,WAAW,EAAE;AAFL;AADN,aAAD;AAPD;AAJqC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAwBD;;;;EArE+BnC,KAAK,CAACqC,S;;SAAnBnC,I;AAsEpB","sourcesContent":["import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n//const labelstab = ['Lundi 22 Octobre', 'Mardi 23 Octobre', 'Mercredi 24 Octobre', 'Jeudi 25 Octobre', 'Vendredi 26 Octobre', 'Samedi 27 Octobre', 'Dimanche 28 Octobre'];\r\n//const datatab = [65, 59, 80, 81, 56, 55, 40];\r\n\r\nexport default class line extends React.Component{\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          chartdata:{\r\n            labels: this.props.dates ,\r\n            datasets: [\r\n              {\r\n                label: 'Nombre de visites',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data : this.props.visites\r\n              }\r\n            ]\r\n          }\r\n\r\n        };\r\n\r\n}\r\n\r\ncomponentWillReceiveProps(){\r\n  return (\r\n    <div>\r\n      <h2>Nombre de visiteurs</h2>\r\n      <Line data={this.state.chartdata} />\r\n    </div>\r\n  );\r\n}\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h2>Nombre de visiteurs</h2>\r\n        <Line data={this.state.chartdata} options={{\r\n          maintainAspectRatio: false,\r\n          responsive: true,\r\n\r\n      scales: {\r\n        yAxes: [{\r\n          scaleLabel: {\r\n              display: true,\r\n              labelString: 'Visites'\r\n            }\r\n        }],\r\n        xAxes: [{\r\n          scaleLabel: {\r\n              display: true,\r\n              labelString: 'Dates'\r\n            }\r\n        }]\r\n      }\r\n        }}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}